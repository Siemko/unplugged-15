/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/INeUsF2qdcV
 */
import { Label } from "./ui/label";
import { Input } from "./ui/input";
import { Textarea } from "./ui/textarea";
import { Button } from "./ui/button";
import { Card } from "./ui/card";
import { useForm, SubmitHandler } from "react-hook-form";
import { useMutation, useQuery } from "@tanstack/react-query";
import { Record } from "./record";

interface Inputs {
  name: string;
  email: string;
  message: string;
}

export function GuestBook() {
  const list = useQuery({
    queryKey: ["list"],
    queryFn: async () => {
      const response = await fetch(`${import.meta.env.VITE_API_URL}/guestbook`);
      const { data } = await response.json();
      return data.map((record: Record<string, { S: string }>) => ({
        name: record.userName.S,
        email: record.userEmail.S,
        message: record.content.S,
        recordId: record.recordId.S,
      }));
    },
  });

  const add = useMutation({
    mutationKey: ["add"],
    mutationFn: async (data: Inputs) => {
      const response = await fetch(
        `${import.meta.env.VITE_API_URL}/guestbook`,
        {
          method: "POST",
          body: JSON.stringify(data),
        },
      );
      return response.json();
    },
    onSuccess: () => {
      list.refetch();
    },
  });

  const { register, handleSubmit } = useForm<Inputs>();

  const onSubmit: SubmitHandler<Inputs> = (data) => add.mutate(data);

  return (
    <form onSubmit={handleSubmit(onSubmit)}>
      <div className="flex flex-col min-h-screen">
        <header className="bg-zinc-700 dark:bg-zinc-800 text-white w-full py-4">
          <h2 className="text-center text-2xl font-bold">
            Welcome to Our Website
          </h2>
        </header>
        <main className="max-w-4xl mx-auto p-4 space-y-8 flex-grow flex flex-col items-center justify-center">
          <div className="space-y-4">
            <h1 className="text-4xl font-bold text-center">Guest Book</h1>
            <p className="text-zinc-500 dark:text-zinc-400 text-center">
              We would love to hear from you. Please sign our guest book.
            </p>
          </div>
          <Card className="p-6 space-y-4 w-full max-w-xl">
            <div className="space-y-2">
              <Label htmlFor="name">Name</Label>
              <Input placeholder="Enter your name" {...register("name")} />
            </div>
            <div className="space-y-2">
              <Label htmlFor="email">Email</Label>
              <Input placeholder="Enter your email" {...register("email")} />
            </div>
            <div className="space-y-2">
              <Label htmlFor="message">Message</Label>
              <Textarea
                className="min-h-[100px]"
                placeholder="Enter your message"
                {...register("message")}
              />
            </div>
            <div className="flex justify-end">
              <Button type="submit">Sign Guest Book</Button>
            </div>
          </Card>
          <div className="w-full max-w-xl grid grid-cols-2 gap-4">
            {list.data?.map(
              (record: {
                recordId: string;
                name: string;
                email: string;
                message: string;
              }) => (
                <Record
                  key={record.recordId}
                  name={record.name}
                  email={record.email}
                  message={record.message}
                />
              ),
            )}
          </div>
        </main>
        <footer className="bg-zinc-700 dark:bg-zinc-800 text-white w-full py-4 mt-auto">
          <h3 className="text-center text-2xl font-bold">
            Thank You for Visiting
          </h3>
        </footer>
      </div>
    </form>
  );
}
